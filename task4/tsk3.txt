import kotlin.math.sqrt

class Vector(private val x: Double, private val y: Double, private val z: Double) {

    fun length(): Double {
        return sqrt(x * x + y * y + z * z)
    }

    infix fun dotProduct(other: Vector): Double {
        return x * other.x + y * other.y + z * other.z
    }

    operator fun times(other: Vector): Double {
        return this dotProduct other
    }
}

fun scalarProduct(v1: Vector, v2: Vector): Double {
    return v1 * v2
}

fun main() {
    val vector1 = Vector(1.0, 2.0, 3.0)
    val vector2 = Vector(3.0, 2.0, 1.0)

    println("Длина первого вектора: ${vector1.length()}")
    println("Длина второго вектора: ${vector2.length()}")
    println("Скалярное произведение (методом): ${vector1 dotProduct vector2}")
    println("Скалярное произведение (оператором *): ${vector1 * vector2}")
    println("Скалярное произведение (вне класса): ${scalarProduct(vector1, vector2)}")
}
